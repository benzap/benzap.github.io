// Compiled by ClojureScript 1.10.238 {}
goog.provide('fif.stdlib.ops');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('fif.stack_machine');
goog.require('fif.stack_machine.words');
goog.require('fif.def');
/**
 * (n -- n) Gets the absolute of the top value
 */
fif.stdlib.ops.abs = (function fif$stdlib$ops$abs(sm){
var vec__41144 = fif.stack_machine.get_stack.call(null,sm);
var i = cljs.core.nth.call(null,vec__41144,(0),null);
var result = (((i > (0)))?i:(- i));
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.pop_stack.call(null,sm),result));
});
fif.stdlib.ops.dup = (function fif$stdlib$ops$dup(sm){
var top = cljs.core.peek.call(null,fif.stack_machine.get_stack.call(null,sm));
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,sm,top));
});
fif.stdlib.ops.dot = (function fif$stdlib$ops$dot(sm){
var top = cljs.core.peek.call(null,fif.stack_machine.get_stack.call(null,sm));
cljs.core.print.call(null,top);

return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.pop_stack.call(null,sm));
});
fif.stdlib.ops.carriage_return = (function fif$stdlib$ops$carriage_return(sm){
cljs.core.print.call(null,"\n");

return fif.stack_machine.dequeue_code.call(null,sm);
});
fif.stdlib.ops.dot_stack = (function fif$stdlib$ops$dot_stack(sm){
var stack = fif.stack_machine.get_stack.call(null,sm);
cljs.core.print.call(null,["<",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count.call(null,stack)),"> "].join(''));

cljs.core.prn.call(null,cljs.core.reverse.call(null,stack));

return fif.stack_machine.dequeue_code.call(null,sm);
});
fif.stdlib.ops.push_return = (function fif$stdlib$ops$push_return(sm){
var vec__41147 = fif.stack_machine.get_stack.call(null,sm);
var i = cljs.core.nth.call(null,vec__41147,(0),null);
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_ret.call(null,fif.stack_machine.pop_stack.call(null,sm),i));
});
fif.stdlib.ops.pop_return = (function fif$stdlib$ops$pop_return(sm){
var vec__41150 = fif.stack_machine.get_ret.call(null,sm);
var i = cljs.core.nth.call(null,vec__41150,(0),null);
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.pop_ret.call(null,sm),i));
});
fif.stdlib.ops.swap = (function fif$stdlib$ops$swap(sm){
var vec__41153 = fif.stack_machine.get_stack.call(null,sm);
var i = cljs.core.nth.call(null,vec__41153,(0),null);
var j = cljs.core.nth.call(null,vec__41153,(1),null);
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.pop_stack.call(null,fif.stack_machine.pop_stack.call(null,sm)),i),j));
});
fif.stdlib.ops.rot = (function fif$stdlib$ops$rot(sm){
var vec__41156 = fif.stack_machine.get_stack.call(null,sm);
var k = cljs.core.nth.call(null,vec__41156,(0),null);
var j = cljs.core.nth.call(null,vec__41156,(1),null);
var i = cljs.core.nth.call(null,vec__41156,(2),null);
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.pop_stack.call(null,fif.stack_machine.pop_stack.call(null,fif.stack_machine.pop_stack.call(null,sm))),j),k),i));
});
fif.stdlib.ops.op_drop = (function fif$stdlib$ops$op_drop(sm){
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.pop_stack.call(null,sm));
});
fif.stdlib.ops.nip = (function fif$stdlib$ops$nip(sm){
var vec__41159 = fif.stack_machine.get_stack.call(null,sm);
var i = cljs.core.nth.call(null,vec__41159,(0),null);
var j = cljs.core.nth.call(null,vec__41159,(1),null);
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.pop_stack.call(null,fif.stack_machine.pop_stack.call(null,sm)),i));
});
fif.stdlib.ops.tuck = (function fif$stdlib$ops$tuck(sm){
var vec__41162 = fif.stack_machine.get_stack.call(null,sm);
var i = cljs.core.nth.call(null,vec__41162,(0),null);
var j = cljs.core.nth.call(null,vec__41162,(1),null);
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.push_stack.call(null,fif.stack_machine.pop_stack.call(null,fif.stack_machine.pop_stack.call(null,sm)),i),j),i));
});
fif.stdlib.ops.over = (function fif$stdlib$ops$over(sm){
var vec__41165 = fif.stack_machine.get_stack.call(null,sm);
var i = cljs.core.nth.call(null,vec__41165,(0),null);
var j = cljs.core.nth.call(null,vec__41165,(1),null);
return fif.stack_machine.dequeue_code.call(null,fif.stack_machine.push_stack.call(null,sm,j));
});
/**
 * (v v --) *move* the item at that position to the top
 */
fif.stdlib.ops.roll = (function fif$stdlib$ops$roll(sm){
var stack = fif.stack_machine.get_stack.call(null,sm);
var pos = cljs.core.peek.call(null,stack);
var item = cljs.core.nth.call(null,stack,pos);
var new_stack = cljs.core.nthrest.call(null,stack,(2));
return null;
});
fif.stdlib.ops.import_stdlib_ops = (function fif$stdlib$ops$import_stdlib_ops(sm){
return fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,fif.stack_machine.words.set_global_word_defn.call(null,sm,new cljs.core.Symbol(null,"*","*",345799209,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._STAR_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Multiply the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"+","+",-740910886,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._PLUS_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Add the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"-","-",-471816912,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Subtract the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"/","/",-1371932971,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._SLASH_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Divide the top two values on the stack",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"abs","abs",1394505050,null),fif.stdlib.ops.abs,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- n ) Absolute value of the top value on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"dec","dec",-766002333,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.dec),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- n ) Decrement of top value on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"inc","inc",324505433,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.inc),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- n ) Increment of top value on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"max","max",1701898075,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.max),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Max value between the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"min","min",2085523049,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.min),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Min value between the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"mod","mod",1510044207,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.mod),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num div -- n ) Modulus of `num` and `div`",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"negate","negate",337772450,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core._),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- n ) Negate the top value",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"quot","quot",-1125214196,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.quot),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num div -- n ) Quotient of dividing `num` by `div`",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"rem","rem",664046770,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.rem),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num div -- n ) Remainder of dividing `num` by `div`",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"bit-and","bit-and",-479352589,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_and),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Bitwise AND between top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-and-not","bit-and-not",-254338837,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_and_not),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Bitwase AND with complement between top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-clear","bit-clear",-1194520583,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_clear),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num idx -- n ) Clear bit of `num` at `idx`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-flip","bit-flip",809639606,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_flip),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num idx -- n ) Flip bit of `num` at `idx`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-not","bit-not",1508529851,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.bit_not),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- n ) Bitwise NOT of top value on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-or","bit-or",-1144943723,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_or),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Bitwise OR of top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-shift-left","bit-shift-left",-1814765981,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_shift_left),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num shift -- n ) Bitwise shift left of `num` by `shift`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-shift-right","bit-shift-right",884046498,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_shift_right),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num shift -- n ) Bitwise shift right of `num` by `shift`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-test","bit-test",543456753,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_test),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( num idx -- b ) Test bit of `num` at `idx`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"bit-xor","bit-xor",-1334295033,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.bit_xor),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n n -- n ) Bitwise Exclusive-or between top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,"byte","byte",-1970660549,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.byte$),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- n ) Coerce to byte.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.misc","stdlib.misc",-33480176)),new cljs.core.Symbol(null,"unsigned-bit-shift-right","unsigned-bit-shift-right",-1953076601,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.unsigned_bit_shift_right),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"(num shift -- n) Bitwise shift right, without sign-extension.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.bitwise","stdlib.bitwise",-1546955317)),new cljs.core.Symbol(null,".",".",1975675962,null),fif.stdlib.ops.dot,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"(n -- ) Send the top value to standard output.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,".s",".s",800456892,null),fif.stdlib.ops.dot_stack,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- ) Prints the contents of the main stack onto standard output.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"<>","<>",-1374249383,null),fif.stdlib.ops.swap,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n1 n2 -- n2 n1 ) Swap the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,">r",">r",1980845558,null),fif.stdlib.ops.push_return,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- ) Moves the top value on the main stack onto the return stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"cr","cr",621502674,null),fif.stdlib.ops.carriage_return,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- ) Sends a newline to standard output.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"drop","drop",2005013138,null),fif.stdlib.ops.op_drop,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- ) Drops the top value on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"dup","dup",-2098137236,null),fif.stdlib.ops.dup,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- n ) Duplicates the top value on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"nip","nip",-1003279775,null),fif.stdlib.ops.nip,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n _ -- ) Drops the second value from the top of the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"over","over",1833084578,null),fif.stdlib.ops.over,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- n ) Duplicates the second value from the top of the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"r>","r>",430303339,null),fif.stdlib.ops.pop_return,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- n ) Moves the top value of the return stack onto the top of the main stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"roll","roll",1651798526,null),fif.stdlib.ops.roll,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"rot","rot",-1896890527,null),fif.stdlib.ops.rot,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n1 n2 n3 -- n2 n3 n1 ) Rotate the top three values.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"swap","swap",1869207164,null),fif.stdlib.ops.swap,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n1 n2 -- n2 n1 ) Swap the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"tuck","tuck",808902878,null),fif.stdlib.ops.tuck,new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- ) duplicate the top item below the second slot.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.forth","stdlib.forth",514552013)),new cljs.core.Symbol(null,"<","<",993667236,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._LT_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` < `y`, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"<=","<=",1244895369,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._LT__EQ_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` <= `y`, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"=","=",-1501502141,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._EQ_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` = `y`, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,">",">",1085014381,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._GT_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` > `y`, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,">=",">=",1016916022,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core._GT__EQ_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` >= `y`, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"and","and",668631710,null),fif.def.wrap_function_with_arity.call(null,(2),(function (p1__41168_SHARP_,p2__41169_SHARP_){
var and__3911__auto__ = p1__41168_SHARP_;
if(cljs.core.truth_(and__3911__auto__)){
return p2__41169_SHARP_;
} else {
return and__3911__auto__;
}
})),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` and `y` are true, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"compare","compare",1109853757,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.compare),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- n ) Returns a negative number, zero, or a\npositive number when x is logically 'less than', 'equal to', or\n'greater than' y",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"not","not",1044554643,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.not),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x -- b ) Returns true if x is logical false, false otherwise.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"not=","not=",1466536204,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.not_EQ_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` not equal to `y`, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"or","or",1876275696,null),fif.def.wrap_function_with_arity.call(null,(2),(function (p1__41170_SHARP_,p2__41171_SHARP_){
var or__3922__auto__ = p1__41170_SHARP_;
if(cljs.core.truth_(or__3922__auto__)){
return or__3922__auto__;
} else {
return p2__41171_SHARP_;
}
})),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( x y -- bool ) Returns true if `x` and `y` are true, else false",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"any?","any?",-318999933,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.any_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is any value.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"associative?","associative?",-141666771,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.associative_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a collection that implements Associative (map set).",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"boolean?","boolean?",1790940868,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.boolean_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a boolean value.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"coll?","coll?",-1874821441,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.coll_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a collection (map set vec list seq).",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"double?","double?",-2146564276,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.double_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a Double.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"even?","even?",-1827825394,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.even_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- bool ) Returns true if the top value is even.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"false?","false?",-1522377573,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.false_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is the boolean value false.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"float?","float?",673884616,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.float_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a floating point number.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"indexed?","indexed?",1234610384,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.indexed_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is indexed (vec).",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"inst?","inst?",1614698981,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.inst_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value satisifes Inst implementation.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"int?","int?",1799729645,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.int_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a fixed precision integer.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"integer?","integer?",1303791671,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.integer_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is an integer.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"keyword?","keyword?",1917797069,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.keyword_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a keyword.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"list?","list?",-1494629,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.list_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a list.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"map?","map?",-1780568534,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.map_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a map.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"nat-int?","nat-int?",-1879663400,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.nat_int_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a non-negative fixed precision integer.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"neg-int?","neg-int?",-1610409390,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.neg_int_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a negative fixed precision integer.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"nil?","nil?",1612038930,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.nil_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is nil.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"number?","number?",-1747282210,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.number_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a number.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"odd?","odd?",-1458588199,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.odd_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- bool ) Returns true if the top value is odd.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.math.arithmetic","stdlib.math.arithmetic",-918517315)),new cljs.core.Symbol(null,"pos-int?","pos-int?",-1205815015,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.pos_int_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a positive fixed precision integer.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"seq?","seq?",-1951934719,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.seq_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value implements ISeq (list seq)",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"seqable?","seqable?",72462495,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.seqable_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the seq function is supported by the top value.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"sequential?","sequential?",1102351463,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.sequential_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value implements Sequential (list vec)",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"set?","set?",1636014792,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.set_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a set.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"some?","some?",234752293,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.some_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is not nil.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"string?","string?",-1129175764,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.string_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a string.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"symbol?","symbol?",1820680511,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.symbol_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a symbol.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"true?","true?",-1600332395,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.true_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is the boolean value true.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"uri?","uri?",2029475116,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.uri_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a java.net.URI.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"uuid?","uuid?",400077689,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.uuid_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is a java.util.UUID.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"vector?","vector?",-61367869,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.vector_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value implements IPersistentVector (vec).",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.type-checking","stdlib.type-checking",-1343529658)),new cljs.core.Symbol(null,"zero?","zero?",325758897,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.zero_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- bool ) Returns true if the top value is the number zero.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.comparison","stdlib.comparison",-1241893518)),new cljs.core.Symbol(null,"count","count",-514511684,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.count),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( coll -- n ) Returns the length of the top value collection.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.collection","stdlib.collection",-1645870768)),new cljs.core.Symbol(null,"deref","deref",1494944732,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.deref),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( derefable -- any ) Dereferences the top value.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.concurrent","stdlib.concurrent",1812911514)),new cljs.core.Symbol(null,"newline","newline",-864364446,null),fif.def.wrap_procedure_with_arity.call(null,(0),cljs.core.newline),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- ) Sends a platform-specific newline to standard out.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.io","stdlib.io",-294283998)),new cljs.core.Symbol(null,"pr","pr",1056937027,null),fif.def.wrap_procedure_with_arity.call(null,(1),cljs.core.pr),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- ) Sends the top value to standard output in reader notation.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.io","stdlib.io",-294283998)),new cljs.core.Symbol(null,"print","print",-1354873355,null),fif.def.wrap_procedure_with_arity.call(null,(1),cljs.core.print),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- ) Sends the top value to standard output as a string",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.io","stdlib.io",-294283998)),new cljs.core.Symbol(null,"println","println",-733595439,null),fif.def.wrap_procedure_with_arity.call(null,(1),cljs.core.println),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- ) Sends the top value to the standard as a string with a newline.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.io","stdlib.io",-294283998)),new cljs.core.Symbol(null,"prn","prn",1561684909,null),fif.def.wrap_procedure_with_arity.call(null,(1),cljs.core.prn),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any -- ) Sends the top value to the standard output in reader notation with a newline.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.io","stdlib.io",-294283998)),new cljs.core.Symbol(null,"rand","rand",-1745930995,null),fif.def.wrap_function_with_arity.call(null,(0),cljs.core.rand),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( -- n ) Returns a random floating point number between [0 1).",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.random","stdlib.random",1568595792)),new cljs.core.Symbol(null,"randn","randn",901235787,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.rand),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( n -- n ) Returns a random floating point number between  [0 n).",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.random","stdlib.random",1568595792)),new cljs.core.Symbol(null,"str","str",-1564826950,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.str),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( any any -- n ) Returns the string concatenation of the top two values on the stack.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","blank?","str/blank?",1891866606,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.blank_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- b ) Returns true if `s` is nil, empty or contains only whitespace.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","capitalize","str/capitalize",-2143095467,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.capitalize),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- s ) Returns the first character of the string uppercase, and all other characters in lowercase.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","ends-with?","str/ends-with?",-346979887,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.ends_with_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( str substr -- bool ) Returns true if `str` ends with `substr`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","escape","str/escape",648687382,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.escape),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s cmap -- s ) Return a new string, using `cmap` to escape each character.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","includes?","str/includes?",-2049398758,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.includes_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s substr -- bool ) Returns true if `s` includes `substr`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","index-of","str/index-of",1276088652,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.index_of),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s substr -- n ) Returns the index of the first occurence of `substr`, otherwise nil.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","index-after","str/index-after",-1757050099,null),fif.def.wrap_function_with_arity.call(null,(3),clojure.string.index_of),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s substr from-index -- n ) Returns the index of the first occurence of `substr` after `from-index`, otherwise nil.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","join","str/join",881653206,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.join),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( sep coll -- s ) Returns a string of collection `coll` elements separated by `sep`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","last-index-of","str/last-index-of",215426559,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.last_index_of),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s substr -- n ) Returns the index of the last occurence of `substr`, otherwise nil.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","last-index-after","str/last-index-after",942166452,null),fif.def.wrap_function_with_arity.call(null,(3),clojure.string.last_index_of),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s substr from-index -- n ) Returns the index of the last occurence of `substr` after `from-index`, otherwise nil.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","lower-case","str/lower-case",1428157153,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.lower_case),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- s ) Returns string with all characters in lowercase.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","replace","str/replace",854058908,null),fif.def.wrap_function_with_arity.call(null,(3),clojure.string.replace),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s re replacement -- s ) Replace all instances in `s` of regex `re` with `replacement`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","replace-first","str/replace-first",-943518390,null),fif.def.wrap_function_with_arity.call(null,(3),clojure.string.replace_first),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s re replacement -- s ) Same as str/replace, but replaces only the first occurrence.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","split","str/split",1040947342,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.split),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s re -- vec ) Splits the string at matching regex `re` into a vector of strings `vec`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","splitn","str/splitn",685051914,null),fif.def.wrap_function_with_arity.call(null,(3),clojure.string.split),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s re n -- vec ) Splits the string at matching regex `re`, but only `n` times, into a vector of strings `vec`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","split-lines","str/split-lines",777365904,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.split_lines),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- vec ) Split string at \\n or \\r\\n into a vector of strings `vec`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","starts-with?","str/starts-with?",1014321448,null),fif.def.wrap_function_with_arity.call(null,(2),clojure.string.starts_with_QMARK_),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( str substr -- bool ) Returns true if `str` starts with `substr`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","trim","str/trim",-1880231187,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.trim),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","trim-newline","str/trim-newline",656734049,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.trim_newline),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- s ) Removes whitespace from both ends of a string.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","triml","str/triml",-286660209,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.triml),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- s ) Removes whitespace from the start of a string.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","trimr","str/trimr",-1740056948,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.trimr),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- s ) Removes whitespace from the end of a string.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol("str","upper-case","str/upper-case",1427171112,null),fif.def.wrap_function_with_arity.call(null,(1),clojure.string.upper_case),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- s ) Returns the string with all characters uppercase.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol(null,"subs","subs",1453849536,null),fif.def.wrap_function_with_arity.call(null,(3),cljs.core.subs),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s start end -- s ) Returns the substring of `s` between indexes `start` and `end`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.string","stdlib.string",116246039)),new cljs.core.Symbol(null,"subvec","subvec",364611032,null),fif.def.wrap_function_with_arity.call(null,(3),cljs.core.subvec),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( v start end -- v ) Returns the subvector of `v` between indexes `start` and `end`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.collection","stdlib.collection",-1645870768)),new cljs.core.Symbol(null,"re-find","re-find",1143444147,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.re_find),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( re s -- g ) Returns the next regex match of `re` in `s` in the form of a regex group.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.regex","stdlib.regex",1305019342)),new cljs.core.Symbol(null,"re-find-match","re-find-match",-289239269,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.re_find),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( m -- g ) Returns the next regex match of Regex Matcher.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.regex","stdlib.regex",1305019342)),new cljs.core.Symbol(null,"re-seq","re-seq",-2105554076,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.re_seq),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( re s -- coll ) Returns a lazy seq of successive matches of regex `re` in `s`.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.regex","stdlib.regex",1305019342)),new cljs.core.Symbol(null,"re-matches","re-matches",-1865705768,null),fif.def.wrap_function_with_arity.call(null,(2),cljs.core.re_matches),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( re s -- g ) Returns the match, if any, of string to regex pattern `re` as a re-group.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.regex","stdlib.regex",1305019342)),new cljs.core.Symbol(null,"re-pattern","re-pattern",1047705161,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.re_pattern),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- re ) Creates a regex pattern object from a string.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.regex","stdlib.regex",1305019342)),new cljs.core.Symbol(null,"regex","regex",-1714946913,null),fif.def.wrap_function_with_arity.call(null,(1),cljs.core.re_pattern),new cljs.core.Keyword(null,"stdlib?","stdlib?",351742220),true,new cljs.core.Keyword(null,"doc","doc",1913296891),"( s -- re ) Creates a regex pattern object from a string.",new cljs.core.Keyword(null,"group","group",582596132),new cljs.core.Keyword(null,"stdlib.regex","stdlib.regex",1305019342));
});
